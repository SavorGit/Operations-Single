apply plugin: 'com.android.application'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
//    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.savor.savorphone"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 2017091501
        versionName "3.0.2"

        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaoredian"]
        ndk {
            abiFilters 'armeabi', 'x86', 'mips'
            //, 'armeabi-v7a', 'mips'
        }
    }

    //配置keystore签名
    signingConfigs {
        debug {
            storeFile file("/files/SavorAds.keystore")
            storePassword "savorAds@savor.com"
            keyAlias "SavorADS"
            keyPassword "savorAds@savor.com"
        }

        release {
            storeFile file("/files/SavorAds.keystore")
            storePassword "savorAds@savor.com"
            keyAlias "SavorADS"
            keyPassword "savorAds@savor.com"
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"

            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"

            minifyEnabled false
            zipAlignEnabled true
            // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    // classpath排除
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    dexOptions {
        preDexLibraries false
        jumboMode = false
        javaMaxHeapSize "4g"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '25.3.0'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation project(':common-library')
}
